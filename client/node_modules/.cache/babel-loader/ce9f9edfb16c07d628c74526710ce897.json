{"ast":null,"code":"var _jsxFileName = \"/home/jurgen/Desktop/fetch-redux/client/src/components/Todos/index.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getUsers as getUsersAction } from '../../actions/getUsers';\nexport class index extends Component {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(props) {\n    super(props);\n  }\n\n  handleClick(e, index) {\n    return;\n  }\n\n  componentDidMount() {\n    console.log(\"THIS PROPS:\" + this.props.getUsers);\n    const getUsers = this.props.getUsers;\n    getUsers();\n  }\n\n  render() {\n    const _this$props = this.props,\n          status = _this$props.status,\n          users = _this$props.users;\n    console.log(status, users);\n    let data;\n\n    if (status === 'loading') {\n      data = React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Loading\");\n    } else if (status === 'success') {\n      return data = users.map((el, idx) => {\n        return React.createElement(\"div\", {\n          key: idx,\n          style: {\n            border: '1px solid'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, el.id), React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, el.title));\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, 'Error');\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, data);\n  }\n\n}\nindex.defaultProps = {\n  users: []\n};\n\nconst mapStateToProps = state => ({\n  status: state.appReducer.status,\n  users: state.appReducer.users\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUsers: () => {\n      dispatch(getUsersAction());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(index);","map":{"version":3,"sources":["/home/jurgen/Desktop/fetch-redux/client/src/components/Todos/index.jsx"],"names":["React","Component","connect","getUsers","getUsersAction","index","constructor","props","handleClick","e","componentDidMount","console","log","render","status","users","data","map","el","idx","border","id","title","defaultProps","mapStateToProps","state","appReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAQ,IAAIC,cAArB,QAA2C,wBAA3C;AAEA,OAAO,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AACjC;AACAK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AACDC,EAAAA,WAAW,CAACC,CAAD,EAAIJ,KAAJ,EAAU;AAAC;AAAU;;AAChCK,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAc,KAAKL,KAAL,CAAWJ,QAArC;AADgB,UAEPA,QAFO,GAEM,KAAKI,KAFX,CAEPJ,QAFO;AAGhBA,IAAAA,QAAQ;AACX;;AACDU,EAAAA,MAAM,GAAG;AAAA,wBACqB,KAAKN,KAD1B;AAAA,UACGO,MADH,eACGA,MADH;AAAA,UACWC,KADX,eACWA,KADX;AAELJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ,EAAoBC,KAApB;AACA,QAAIC,IAAJ;;AACA,QAAGF,MAAM,KAAK,SAAd,EAAwB;AACpBE,MAAAA,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACH,KAFD,MAGK,IAAIF,MAAM,KAAK,SAAf,EAA0B;AAC3B,aAAOE,IAAI,GAAGD,KAAK,CAACE,GAAN,CAAU,CAACC,EAAD,EAAKC,GAAL,KAAa;AACjC,eACI;AAAK,UAAA,GAAG,EAAEA,GAAV;AAAe,UAAA,KAAK,EAAE;AAACC,YAAAA,MAAM,EAAE;AAAT,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,EAAE,CAACG,EAAR,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKH,EAAE,CAACI,KAAR,CAFJ,CADJ;AAMH,OAPa,CAAd;AAQH,KATI,MAUA;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,OADL,CADJ;AAKH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,IADL,CADJ;AAKH;;AAxCgC;AA2CrCX,KAAK,CAACkB,YAAN,GAAqB;AACjBR,EAAAA,KAAK,EAAE;AADU,CAArB;;AAIA,MAAMS,eAAe,GAAIC,KAAD,KAAY;AAChCX,EAAAA,MAAM,EAAEW,KAAK,CAACC,UAAN,CAAiBZ,MADO;AAEhCC,EAAAA,KAAK,EAAEU,KAAK,CAACC,UAAN,CAAiBX;AAFQ,CAAZ,CAAxB;;AAKA,MAAMY,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AAACzB,IAAAA,QAAQ,EAAE,MAAI;AAAEyB,MAAAA,QAAQ,CAACxB,cAAc,EAAf,CAAR;AAA4B;AAA7C,GAAP;AACH,CAFD;;AAIA,eAAeF,OAAO,CAACsB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CtB,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { getUsers as getUsersAction } from '../../actions/getUsers';\n\nexport class index extends Component {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props){\n        super(props);\n    }\n    handleClick(e, index){return   }\n    componentDidMount() {\n        console.log(\"THIS PROPS:\"+this.props.getUsers);\n        const {  getUsers } = this.props;\n        getUsers();\n    }\n    render() {\n        const { status, users } = this.props;\n        console.log(status, users);\n        let data;\n        if(status === 'loading'){\n            data = <h1>Loading</h1>\n        }\n        else if (status === 'success') {\n            return data = users.map((el, idx) => {\n                return (\n                    <div key={idx} style={{border: '1px solid'}}>\n                        <h4>{el.id}</h4>\n                        <h4>{el.title}</h4>\n                    </div>\n                )\n            })\n        }\n        else {\n            return(\n                <div>\n                    {'Error'}\n                </div>\n            )\n        }\n        return (\n            <div>\n                {data}\n            </div>\n        )\n    }\n}\n\nindex.defaultProps = {\n    users: []\n};\n\nconst mapStateToProps = (state) => ({\n    status: state.appReducer.status,\n    users: state.appReducer.users\n});\n\nconst mapDispatchToProps = dispatch => {\n    return {getUsers: ()=>{ dispatch(getUsersAction()) } }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(index)\n"]},"metadata":{},"sourceType":"module"}